# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules =
    [ "nvme" "xhci_pci" "ahci" "usb_storage" "uas" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp6s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;

  ### Impermanence ###

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/1570e1b8-e5fb-4163-8828-dee97caf2fb1";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/85E0-F22E";
    fsType = "vfat";
  };

  fileSystems."/run/media/jomor/vault" = {
    device = "/dev/disk/by-uuid/69af1307-167c-4269-9eb9-9a7bc7cd1ff2";
    fsType = "ext4";
  };

  fileSystems."/run/media/jomor/windows" = {
    device = "/dev/disk/by-uuid/426630F96630EEF3";
    fsType = "ntfs-3g";
    options = [ "rw" "uid=1000" ];
  };

  # fileSystems."/persistent" =
  #   { device = "/dev/root_vg/root";
  #     neededForBoot = true;
  #     fsType = "btrfs";
  #     options = ["subvol=persistent"];
  #   };

  # fileSystems."/nix" =
  #   { device = "/dev/root_vg/root";
  #     fsType = "btrfs";
  #     options = ["subvol=nix"];
  #   };

}
